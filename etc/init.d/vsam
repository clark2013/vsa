#!/bin/bash
#
# vsamon        Startup script for vsad monitor
#
# chkconfig: 345 87 14
# description: vsamon service script
#
### BEGIN INIT INFO
# Provides:             vasm
# Required-Start:       $network
# Short-Description:    vsamon service script
# Description:          vsamon service script
# Required-Stop:        $network
# Default-Start:        3 4 5
# Default-Stop:         0 1 2 6
### END INIT INFO
#

test -f /etc/rc.d/init.d/functions && . /etc/rc.d/init.d/functions
test -f /etc/rc.status && . /etc/rc.status

prog="VSA monitor"
bin="vsamon"
run="nohup /usr/sbin/$bin >/dev/null 2>&1 &"
lockfile=/var/lock/subsys/vsam

isrunning() {
	pros=`ps -aef | grep $bin | grep bash | awk '{print $2}'`
	if [ -n "$pros" ]; then
		RETVAL=0
	else
		RETVAL=1
	fi
	return $RETVAL
}

start() {
	isrunning
	if [ $RETVAL = 0 ]; then
		local m="$prog is already running "
		test -f /etc/rc.status && _rc_status=1 && echo -n $m && rc_status -v
		test ! -f /etc/rc.status && echo $m
		return
	fi

	eval "$run"
	sleep 1
	if [ -f /etc/rc.status ]; then
		echo -n "Starting $prog: "
		rc_status -v
	else
		action $"Starting $prog: " isrunning
	fi
	[ "$RETVAL" = 0 ] && touch $lockfile
}

stop() {
	isrunning
	if [ "$RETVAL" == 0 ]; then
		/bin/kill -9 $pros
		echo "Stopping $prog"
	else
		echo "$prog is not running"
		RETVAL=0
	fi
	[ "$RETVAL" = 0 ] && rm -f $lockfile
	test -f /etc/rc.status && rc_status -v
}

restartq() {
	echo "Restarting $prog"
	stop > /dev/null
	start > /dev/null
}

status() {
	isrunning
	if [ "$RETVAL" == 0 ] ; then
		echo "$prog is running..."
	else
		echo "$prog is not running"
	fi
}

# See how we were called.
case "$1" in
  start)
    start
    ;;
  restart)
    stop
    start
    ;;
  restartq)
    restartq
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|restartq}"
    ;;
esac

exit $RETVAL
